#!/usr/bin/env bash

set -uo pipefail;

####################################
# Ensure we can execute standalone #
####################################

function early_death() {
  echo "[FATAL] ${0}: ${1}" >&2;
  exit 1;
};

if [ -z "${GMENV_ROOT:-""}" ]; then
  # http://stackoverflow.com/questions/1055671/how-can-i-get-the-behavior-of-gnus-readlink-f-on-a-mac
  readlink_f() {
    local target_file="${1}";
    local file_name;

    while [ "${target_file}" != "" ]; do
      cd "$(dirname ${target_file})" || early_death "Failed to 'cd \$(dirname ${target_file})' while trying to determine GMENV_ROOT";
      file_name="$(basename "${target_file}")" || early_death "Failed to 'basename \"${target_file}\"' while trying to determine GMENV_ROOT";
      target_file="$(readlink "${file_name}")";
    done;

    echo "$(pwd -P)/${file_name}";
  };

  GMENV_ROOT="$(cd "$(dirname "$(readlink_f "${0}")")/.." && pwd)";
  [ -n ${GMENV_ROOT} ] || early_death "Failed to 'cd \"\$(dirname \"\$(readlink_f \"${0}\")\")/..\" && pwd' while trying to determine GMENV_ROOT";
else
  GMENV_ROOT="${GMENV_ROOT%/}";
fi;
export GMENV_ROOT;

if [ -n "${GMENV_HELPERS:-""}" ]; then
  log 'debug' 'GMENV_HELPERS is set, not sourcing helpers again';
else
  [ "${GMENV_DEBUG:-0}" -gt 0 ] && echo "[DEBUG] Sourcing helpers from ${GMENV_ROOT}/lib/helpers.sh";
  if source "${GMENV_ROOT}/lib/helpers.sh"; then
    log 'debug' 'Helpers sourced successfully';
  else
    early_death "Failed to source helpers from ${GMENV_ROOT}/lib/helpers.sh";
  fi;
fi;

# Ensure libexec and bin are in $PATH
for dir in libexec bin; do
  case ":${PATH}:" in
    *:${GMENV_ROOT}/${dir}:*) log 'debug' "\$PATH already contains '${GMENV_ROOT}/${dir}', not adding it again";;
    *) 
      log 'debug' "\$PATH does not contain '${GMENV_ROOT}/${dir}', prepending and exporting it now";
      export PATH="${GMENV_ROOT}/${dir}:${PATH}";
      ;;
  esac;
done;

#####################
# Begin Script Body #
#####################

if [ "${#}" -ne 0 ];then
  echo "usage: gmenv list-remote" 1>&2
  exit 1;
fi

declare GMENV_REPO="${GMENV_REPO:-release}";

GMENV_REMOTE="${GMENV_REMOTE:-https://nexus.greymatter.io/service/rest/v1/search/assets?repository=raw&sort=name&group=%2F${GMENV_REPO}%2Fgm-cli}"

log 'debug' "GMENV_REMOTE: ${GMENV_REMOTE}";

declare GMENV_LDAP_USERNAME="${GMENV_LDAP_USERNAME:-""}"
declare GMENV_LDAP_PASSWORD="${GMENV_LDAP_PASSWORD:-""}"


if [ -z "${GMENV_LDAP_USERNAME:-""}" ] || [ -z "${GMENV_LDAP_PASSWORD:-""}" ]; then
  log 'debug' 'Credentials not passed in as environment variables'

  gmenv-credentials-file || log 'error' "gmenv-credentials-file failed"

  declare credentials="$(cat ${GMENV_CREDENTIALS_FILE})"
else
  declare credentials=${GMENV_LDAP_USERNAME}:${GMENV_LDAP_PASSWORD}
fi

#log 'debug' "Remote versions available: ${remote_versions}"; # Even in debug mode this is too verbose

declare versions="$(curlw -u "${credentials}" -sf ${GMENV_REMOTE} \
  | grep -o -E "[0-9]+\.[0-9]+\.[0-9]+(-(rc|beta|alpha|oci)[0-9]*)?" \
  | uniq;)"

if [ "${versions}" == "" ]; then
  log 'error' 'No versions found or authentication is invalid.'
  exit 1;
fi

echo "${versions}"